// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` <DailyScoreFormScreen /> Component   Should Successfully Rendred  1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    className="sc-bdvvtL sc-gsDKAQ  giHPxp"
    dataSet={Object {}}
    style={Object {}}
  >
    <View
      className="sc-dkPtRN ipVPo"
      dataSet={Object {}}
      mBottom={50}
      style={Object {}}
    >
      <Text
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": null,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 30,
            "textDecorationLine": undefined,
          }
        }
      >
        How Well You Slept ?
      </Text>
    </View>
    <View
      className="sc-dkPtRN gJaBSN"
      dataSet={Object {}}
      mVertical={30}
      style={Object {}}
    />
    <View
      className="sc-dkPtRN hPqa-Dd"
      dataSet={Object {}}
      mVertical={20}
      style={Object {}}
    >
      <View
        dataSet={Object {}}
        isInvalid={false}
        style={
          Object {
            "width": "100%",
          }
        }
      />
    </View>
    <View
      className="sc-dkPtRN ceYxvD"
      dataSet={Object {}}
      mTop={60}
      style={Object {}}
    >
      <View
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="green"
        dataSet={Object {}}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#d4d4d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 0.5,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
        testID="save-score-button"
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            dataSet={Object {}}
            style={Object {}}
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#000000",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Sumbmit
            </Text>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": 8,
              }
            }
          />
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4278190080}
            dataSet={Object {}}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#000000",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "height": 16,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4278190080}
            vbHeight={14}
            vbWidth={14}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 14,
                  "fontWeight": "500",
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGPath
                    d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
